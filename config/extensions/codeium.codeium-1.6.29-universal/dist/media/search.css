:root {
  --container-padding: 20px;
  --input-padding-vertical: 6px;
  --input-padding-horizontal: 4px;
  --input-margin-vertical: 4px;
  --input-margin-horizontal: 0;
}

body {
  padding: 0 var(--container-padding);
  color: var(--vscode-foreground);
  font-size: var(--vscode-font-size);
  font-weight: var(--vscode-font-weight);
  font-family: var(--vscode-font-family);
  background-color: var(--vscode-editor-background);
}

.search code {
  font-family: var(--vscode-editor-font-family);
  font-size: 11px;
}

.search {
  padding-top: 20px;
  padding-bottom: 40px;
}

#user-input {
  width: 100%;
  margin: 10px 0;
}

.search-result:hover {
  filter: brightness(90%);
}

.search-result {
  padding: 8px 12px 2px;
  background-color: var(--vscode-dropdown-background);
  border: 1px solid var(--vscode-dropdown-border);
  margin-top: 5px;
  margin-bottom: 5px;
  cursor: pointer;
  position: relative;
}

.search-result-filename {
  font-size: var(--vscode-font-size);
  font-weight: var(--vscode-font-weight);
  font-family: var(--vscode-font-family);
  color: var(--vscode-input-foreground);
  margin-right: 4px;
}

.search-result-filepath {
  font-size: 11px;
  font-weight: var(--vscode-font-weight);
  font-family: var(--vscode-font-family);
  color: var(--vscode-input-foreground);
  opacity: 0.75;
  overflow: hidden;
}

.search-result-icon {
  position: absolute;
  top: 8px;
  right: 8px;
}

.file-info {
  max-width: 95%;
  overflow: hidden;
}

.buttons {
  font-size: 10px;
  margin: 0;
  width: 100%;
}

#clear-button {
  cursor: pointer;
  margin-left: 2px;
}

#search-history {
  margin-top: 10px;
  margin-bottom: 5px;
}

#search-history-dropdown {
  width: 40%;
}

#info-button {
  float: right;
  cursor: pointer;
}

h1 {
  font-weight: var(--vscode-font-weight);
}

.visible {
  display: block;
}

.hidden {
  display: none;
}

.error {
  color: var(--vscode-errorForeground);
}

ul {
  padding-inline-start: 24px;
}

li {
  margin-bottom: 5px;
}

#user-input {
  padding: var(--input-padding-vertical) var(--input-padding-horizontal);
  margin: var(--input-margin-vertical) var(--input-margin-horizontal);
  border: var(--vscode-border);
  background-color: var(--vscode-input-background);
  color: var(--vscode-input-foreground);
  font-family: var(--vscode-font-family);
  width: 100%;
}

/* Taken from https://css-tricks.com/the-cleanest-trick-for-autogrowing-textareas/ */
.grow-wrap {
  /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
  display: grid;
}
.grow-wrap::after {
  /* Note the weird space! Needed to prevent jumpy behavior */
  content: attr(data-replicated-value) " ";

  /* This is how textarea text behaves */
  white-space: pre-wrap;

  /* Hidden from view, clicks, and screen readers */
  visibility: hidden;
}
.grow-wrap > textarea {
  /* You could leave this, but after a user resizes, then it ruins the auto sizing */
  resize: none;

  /* Firefox shows scrollbar on growth, you can hide like this. */
  overflow: hidden;
}
.grow-wrap > textarea,
.grow-wrap::after {
  /* Identical styling required!! */
  border: 1px solid black;
  padding: 0.5rem;
  font: inherit;

  /* Place on top of each other */
  grid-area: 1 / 1 / 2 / 2;
}

#info-button.tooltip:hover::before {
  content: attr(title);
  display: inline-block;
  position: absolute;
  background-color: black;
  color: white;
  padding: 5px;
  border-radius: 5px;
  font-size: 12px;
  margin-top: -25px;
  margin-right: 5px;
  right: 0;
  min-width: 100px;
}

li:hover::before {
  content: attr(title);
  display: inline-block;
  position: absolute;
  background-color: black;
  color: white;
  padding: 5px;
  border-radius: 5px;
  font-size: 12px;
  margin-top: -25px;
  margin-left: 5px;
}

span.bullet {
  display: inline-block;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  margin-right: 5px;
}

span.bullet.active {
  background-color: green;
}

span.bullet.ignored {
  background-color: red;
}
